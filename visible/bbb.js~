var Point = function(x, y) {
    this.x = x;
    this.y = y;
};

var Segment = function(begin, end) {
    this.begin = begin;
    this.end = end;
};

Segment.prototype.draw = function(ctx) {
    ctx.save();
    ctx.beginPath();
    ctx.moveTo(this.begin.x, this.begin.y);
    ctx.lineTo(this.points[i].x, this.points[i].y);
    }
    ctx.closePath();
    ctx.stroke();
    ctx.restore();
}

function get_random_points(num, field) {
    var points = [];
    var distx, disty;
    var x, y;

    distx = field.points[2].x - field.points[0].x;
    disty = field.points[2].y - field.points[0].y;
    for(var i = 0; i < num; i++) {
	x = Math.random() * distx + field.points[0].x;
	y = Math.random() * disty + field.points[0].y;
	points.push(new Point(x, y));
    }
    return points;
}


var cv;
var c;
var timerID;

cv = document.getElementById('cv');
if(cv.getContext) {
    c = cv.getContext('2d');
   // timerID = setInterval(draw, 150);
}

var stage = {
    x: 50,
    y: 50,
    w: 400,
    h: 400
};

var field  = new Polygon([
    new Point(stage.x, stage.y),
    new Point(stage.x, stage.y + stage.h),
    new Point(stage.x + stage.w, stage.y + stage.h),
    new Point(stage.x + stage.w, stage.y)
]);

var points = get_random_points(100, field);

function draw() {
    c.clearRect(0, 0, cv.width, cv.height);
    field.draw(c);
    triangles.forEach(function(triangle) {
	var output = true;
	for(var i = 0; i < triangle.points.length; i++) {
	    
	    for(var j = 0; j < dame.points.length; j++) {
		if(dame.points[j].equal(triangle.points[i])) output = false;
		
	    }
	}
	if(output) triangle.draw(c);
    });
    points.forEach(function(point) {
	point.draw(c);
    });  
}
